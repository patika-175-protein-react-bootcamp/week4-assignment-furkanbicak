{"ast":null,"code":"var _jsxFileName = \"/Users/ahmetfurkanbicak/Desktop/week4-assignment-furkanbicak/game/src/pages/Game.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BoardIcon from '../constans/icons/boardIcon';\nimport CircleIcon from '../constans/icons/circleIcon';\nimport '../css/Game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Game() {\n  _s();\n\n  const [options, setOptions] = useState([]);\n  const [board, setboard] = useState([]);\n  const [score, setScore] = useState(0);\n  const [truAnswer, setTrueAnswer] = useState(0); //Dogru soru sayısını tutar.\n\n  const [answer, setAnswer] = useState(0); //Kacıncı sorudasın?\n\n  const [currentProblem, setCurrentProblem] = useState({});\n  const [questionList, setQuestionList] = useState({});\n  let key = [];\n  let curent = {};\n  let choie1;\n  let choie2;\n  let choieTrue;\n  let navigate = useNavigate();\n\n  const routeChange = () => {\n    console.log(\"YRRRASKDAKSDKASDK\");\n    navigate(`/finish`);\n  };\n\n  function shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n\n    return a;\n  }\n\n  function randomNumber(max) {\n    return Math.floor(Math.random() * max) + 1;\n  }\n\n  function generateProblem() {\n    let one = randomNumber(11);\n    let two = randomNumber(11); //setCurrentProblem({numberOne:one, numberTwo: two});\n\n    setboard({\n      numberOne: one,\n      numberTwo: two\n    });\n    curent = {\n      numberOne: one,\n      numberTwo: two\n    };\n    console.log(\"first\", curent); // setCurrentProblem(prevState => (\n    //   {\n    //     ...prevState, \n    //     ...prevState, numberOne:one, numberTwo: two\n    //   }\n    // ))\n  }\n\n  function gameStart() {\n    generateProblem();\n    let firstNumber = curent.numberOne;\n    let secondNumber = curent.numberTwo;\n    console.log(\"firstNumber\", firstNumber);\n    console.log(\"seconNumber\", secondNumber);\n    choie1 = (firstNumber - 1) * secondNumber;\n    choie2 = firstNumber * (secondNumber + 1);\n    choieTrue = firstNumber * secondNumber;\n    console.log('choie1', choie1);\n    console.log('choie2', choie2);\n    console.log('choieTrue', choieTrue);\n    key.push(choie1, choie2, choieTrue);\n    console.log(key);\n    setQuestionList({ ...questionList,\n      firstNumber: firstNumber,\n      secondNumber: secondNumber,\n      options: choieTrue,\n      answer: false\n    });\n    setOptions(shuffle(key));\n  }\n\n  console.log(\"Secenekler\", options);\n  console.log(questionList);\n\n  function hübele(param, item) {\n    if (answer === 9) {\n      routeChange();\n    }\n\n    setAnswer(prev => prev + 1);\n\n    if (item == questionList.options) {\n      setTrueAnswer(prev => prev + 1);\n      let newScore = Math.round(Math.sqrt(questionList.options));\n      setScore(score + newScore);\n      document.body.style = 'background-color: green;';\n      gameStart();\n    } else {\n      document.body.style = 'background-color: red;';\n      gameStart();\n    } // setQuestionList({...questionList, answer:true})\n    // console.log(questionList)\n\n  }\n\n  useEffect(() => {\n    gameStart();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/finish\",\n      children: \"Finish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar_title\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: `Score: ${score}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Tour: 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: `Questions: ${truAnswer}/${answer}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-board\",\n        children: [/*#__PURE__*/_jsxDEV(BoardIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-board-question title\",\n          children: `${board.numberOne} x ${board.numberTwo}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-selection\",\n        children: options === null || options === void 0 ? void 0 : options.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `container-selection_${index + 1}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => hübele(index, item),\n            className: \"routerButton\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"container-selection-text title\",\n              children: `${item}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(CircleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Game, \"svlVq/yTBxyyE31LVvCvknxgtUY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/ahmetfurkanbicak/Desktop/week4-assignment-furkanbicak/game/src/pages/Game.js"],"names":["useEffect","useState","useNavigate","BoardIcon","CircleIcon","Game","options","setOptions","board","setboard","score","setScore","truAnswer","setTrueAnswer","answer","setAnswer","currentProblem","setCurrentProblem","questionList","setQuestionList","key","curent","choie1","choie2","choieTrue","navigate","routeChange","console","log","shuffle","a","i","length","j","Math","floor","random","randomNumber","max","generateProblem","one","two","numberOne","numberTwo","gameStart","firstNumber","secondNumber","push","hübele","param","item","prev","newScore","round","sqrt","document","body","style","map","index"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BoardIcon from '../constans/icons/boardIcon';\nimport CircleIcon from '../constans/icons/circleIcon';\nimport '../css/Game.css';\n\nfunction Game() {\n  const [options, setOptions] = useState([]);\n  const [board, setboard] = useState([]);\n  const [score, setScore] = useState(0);\n\n  const [truAnswer, setTrueAnswer] = useState(0); //Dogru soru sayısını tutar.\n  const [answer, setAnswer] = useState(0);        //Kacıncı sorudasın?\n\n  const [currentProblem, setCurrentProblem] = useState({});\n\n  const [questionList, setQuestionList] = useState({});\n\n  let key = [];\n  let curent = {};\n  let choie1;\n  let choie2;\n  let choieTrue;\n\n  let navigate = useNavigate();\n  const routeChange = () =>{ \n    console.log(\"YRRRASKDAKSDKASDK\")\n    navigate(`/finish`);\n  };\n\n  function shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n      return a;\n  }  \n\n  function randomNumber(max) {\n    return (Math.floor(Math.random() * max ) + 1 );\n  }\n\n  function generateProblem() {\n    let one = randomNumber(11);\n    let two = randomNumber(11);\n\n     //setCurrentProblem({numberOne:one, numberTwo: two});\n     setboard({numberOne:one, numberTwo: two});\n     curent = {numberOne:one, numberTwo: two};\n    console.log(\"first\", curent)\n    // setCurrentProblem(prevState => (\n    //   {\n    //     ...prevState, \n    //     ...prevState, numberOne:one, numberTwo: two\n    //   }\n    // ))\n  }\n  \n\n\n  function gameStart() {\n    generateProblem();\n\n    let firstNumber = curent.numberOne;\n    let secondNumber = curent.numberTwo;\n\n    console.log(\"firstNumber\", firstNumber)\n    console.log(\"seconNumber\",secondNumber)\n   \n    choie1 = (firstNumber-1) * secondNumber;\n    choie2 = firstNumber * (secondNumber+1);\n    choieTrue = firstNumber * secondNumber;\n\n    console.log('choie1', choie1)\n    console.log('choie2', choie2)\n    console.log('choieTrue', choieTrue)\n    \n    key.push(choie1,choie2,choieTrue);\n    console.log(key)\n\n    setQuestionList({...questionList, firstNumber: firstNumber, secondNumber: secondNumber, options: choieTrue, answer: false})\n    setOptions(shuffle(key))\n\n  }\n\n  console.log(\"Secenekler\", options)\n  console.log(questionList)\n   \n  function hübele (param, item){ \n    if(answer === 9){\n      \n      routeChange();\n    }\n    setAnswer((prev) => prev + 1);\n\n    if(item == questionList.options){\n      setTrueAnswer((prev) => prev + 1);\n      let newScore = Math.round(Math.sqrt(questionList.options));\n      setScore( score + newScore);\n      document.body.style = 'background-color: green;'\n      gameStart();\n    }else{\n      document.body.style = 'background-color: red;'\n      gameStart();\n    }\n    // setQuestionList({...questionList, answer:true})\n    // console.log(questionList)\n  }\n\n  useEffect(() => {\n    gameStart()\n\n  },[]);\n\n\n\n  return (\n    <>\n        <div>Game</div>\n        <a href='/finish'>Finish</a>\n        \n        <div className=\"navbar\">\n        <div className=\"navbar_title\">\n            <div>{`Score: ${score}`}</div>\n            <div>Tour: 2</div>\n            <div>{`Questions: ${truAnswer}/${answer}`}</div>\n        </div>\n    </div>\n\n    <div className='container'>\n    \n        <div className='container-board'>\n            <BoardIcon />\n            <div className='container-board-question title'>\n              {`${board.numberOne} x ${board.numberTwo}`}\n            </div>\n        </div>\n\n        <div className='container-selection'>\n            {\n              options?.map((item, index) => (\n                <div className={`container-selection_${index + 1}`}>\n                    <button \n                          onClick     =     {() => hübele(index, item)}\n                          className   =     'routerButton' \n                          key         =     {index}  \n                      >\n                      <p className=\"container-selection-text title\">{`${item}`}</p>\n                      <CircleIcon />\n                    </button>\n                  </div> \n                ))\n            }               \n        </div> \n      </div> \n    </>\n  );\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}