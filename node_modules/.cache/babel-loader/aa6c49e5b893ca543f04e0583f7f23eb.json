{"ast":null,"code":"var _jsxFileName = \"/Users/ahmetfurkanbicak/Desktop/week4-assignment-furkanbicak/game/src/pages/Game.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BoardIcon from '../constans/icons/boardIcon';\nimport CircleIcon from '../constans/icons/circleIcon';\nimport '../css/Game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Game() {\n  _s();\n\n  const [options, setOptions] = useState([]);\n  const [score, setScore] = useState(0);\n  const [currentProblem, setCurrentProblem] = useState({});\n  const [questionList, setQuestionList] = useState({\n    firstNumber: 1,\n    secondNumber: 1,\n    options: 1,\n    answer: false\n  });\n  let key = [];\n  let choie1;\n  let choie2;\n  let choieTrue;\n  let navigate = useNavigate();\n\n  const routeChange = () => {\n    navigate(`/finish`);\n  };\n\n  function shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n\n    return a;\n  }\n\n  function randomNumber(max) {\n    return Math.floor(Math.random() * max) + 1;\n  }\n\n  function generateProblem() {\n    let one = randomNumber(11);\n    let two = randomNumber(11); // setCurrentProblem({numberOne:one, numberTwo: two});\n\n    setCurrentProblem(prevState => ({ ...prevState,\n      ...prevState,\n      numberOne: one,\n      numberTwo: two\n    }));\n  }\n\n  console.log(\"Yaralıyım\", currentProblem);\n\n  function gameStart() {\n    generateProblem();\n    console.log(\"Yaralıyım2\", currentProblem);\n    let firstNumber = currentProblem.numberOne;\n    let secondNumber = currentProblem === null || currentProblem === void 0 ? void 0 : currentProblem.numberTwo;\n    console.log(\"firstNumber\", firstNumber);\n    console.log(\"seconNumber\", secondNumber);\n    choie1 = (firstNumber - 1) * secondNumber;\n    choie2 = firstNumber * (secondNumber + 1);\n    choieTrue = firstNumber * secondNumber;\n    console.log('choie1', choie1);\n    console.log('choie2', choie2);\n    console.log('choieTrue', choieTrue);\n    key.push(choie1, choie2, choieTrue);\n    console.log(key);\n    setQuestionList({ ...questionList,\n      firstNumber: firstNumber,\n      secondNumber: secondNumber,\n      options: choieTrue,\n      answer: false\n    });\n    setOptions(shuffle(key));\n  }\n\n  console.log(\"Secenekler\", options);\n  console.log(questionList);\n\n  function hübele(param, item) {\n    if (item == questionList.options) {\n      let newScore = Math.round(Math.sqrt(questionList.options));\n      setScore(score + newScore);\n      document.body.style = 'background-color: green;';\n      gameStart();\n    } else {\n      document.body.style = 'background-color: red;';\n      gameStart();\n    } // setQuestionList({...questionList, answer:true})\n    // console.log(questionList)\n\n  }\n\n  useEffect(() => {\n    gameStart();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/finish\",\n      children: \"Finish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar_title\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: `Score: ${score}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Tour: 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Questions: 6/7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-board\",\n        children: [/*#__PURE__*/_jsxDEV(BoardIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-board-question title\",\n          children: `${currentProblem.numberOne} x ${currentProblem.numberTwo}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-selection\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-selection_1\",\n          children: options === null || options === void 0 ? void 0 : options.map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => hübele(index, item),\n            className: \"routerButton\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"container-selection-text title\",\n              children: `${item}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(CircleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Game, \"RP3QHGeGHKcqi/weLU2Z0NI7o0I=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/ahmetfurkanbicak/Desktop/week4-assignment-furkanbicak/game/src/pages/Game.js"],"names":["useEffect","useState","useNavigate","BoardIcon","CircleIcon","Game","options","setOptions","score","setScore","currentProblem","setCurrentProblem","questionList","setQuestionList","firstNumber","secondNumber","answer","key","choie1","choie2","choieTrue","navigate","routeChange","shuffle","a","i","length","j","Math","floor","random","randomNumber","max","generateProblem","one","two","prevState","numberOne","numberTwo","console","log","gameStart","push","hübele","param","item","newScore","round","sqrt","document","body","style","map","index"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BoardIcon from '../constans/icons/boardIcon';\nimport CircleIcon from '../constans/icons/circleIcon';\nimport '../css/Game.css';\n\nfunction Game() {\n  const [options, setOptions] = useState([]);\n  const [score, setScore] = useState(0);\n  const [currentProblem, setCurrentProblem] = useState({});\n\n  const [questionList, setQuestionList] = useState({\n      firstNumber: 1, \n      secondNumber: 1, \n      options: 1,\n      answer: false\n  });\n\n  let key = [];\n  let choie1;\n  let choie2;\n  let choieTrue;\n\n  let navigate = useNavigate();\n  const routeChange = () =>{ \n    navigate(`/finish`);\n  };\n\n  function shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n      return a;\n  }  \n\n  function randomNumber(max) {\n    return (Math.floor(Math.random() * max ) + 1 );\n  }\n\n  function generateProblem() {\n    let one = randomNumber(11);\n    let two = randomNumber(11);\n\n    // setCurrentProblem({numberOne:one, numberTwo: two});\n\n    setCurrentProblem(prevState => (\n      {\n        ...prevState, \n        ...prevState, numberOne:one, numberTwo: two\n      }\n    ))\n  }\n\n  console.log(\"Yaralıyım\",currentProblem)\n\n  function gameStart() {\n    generateProblem();\n    console.log(\"Yaralıyım2\",currentProblem)\n    let firstNumber = currentProblem.numberOne;\n    let secondNumber = currentProblem?.numberTwo;\n\n    console.log(\"firstNumber\", firstNumber)\n    console.log(\"seconNumber\",secondNumber)\n   \n    choie1 = (firstNumber-1) * secondNumber;\n    choie2 = firstNumber * (secondNumber+1);\n    choieTrue = firstNumber * secondNumber;\n\n    console.log('choie1', choie1)\n    console.log('choie2', choie2)\n    console.log('choieTrue', choieTrue)\n    \n    key.push(choie1,choie2,choieTrue);\n    console.log(key)\n\n    setQuestionList({...questionList, firstNumber: firstNumber, secondNumber: secondNumber, options: choieTrue, answer: false})\n    setOptions(shuffle(key))\n\n  }\n\n  console.log(\"Secenekler\", options)\n  console.log(questionList)\n   \n  function hübele (param, item){ \n\n    if(item == questionList.options){\n      let newScore = Math.round(Math.sqrt(questionList.options));\n      setScore( score + newScore);\n      document.body.style = 'background-color: green;'\n      gameStart();\n    }else{\n      document.body.style = 'background-color: red;'\n      gameStart();\n    }\n    // setQuestionList({...questionList, answer:true})\n    // console.log(questionList)\n  }\n\n  useEffect(() => {\n    gameStart()\n\n  },[]);\n\n\n  return (\n    <>\n        <div>Game</div>\n        <a href='/finish'>Finish</a>\n        \n        <div className=\"navbar\">\n        <div className=\"navbar_title\">\n            <div>{`Score: ${score}`}</div>\n            <div>Tour: 2</div>\n            <div>Questions: 6/7</div>\n        </div>\n    </div>\n\n    <div className='container'>\n    \n        <div className='container-board'>\n            <BoardIcon />\n            <div className='container-board-question title'>\n              {`${currentProblem.numberOne} x ${currentProblem.numberTwo}`}\n            </div>\n        </div>\n\n        <div className='container-selection'>\n            <div className='container-selection_1'>\n\n              {\n                options?.map((item, index) => (\n                  <button \n                        onClick     =     {() => hübele(index, item)}\n                        className   =     'routerButton' \n                        key         =     {index}  \n                    >\n                    <p className=\"container-selection-text title\">{`${item}`}</p>\n                    <CircleIcon />\n\n                  </button>\n                ))\n              }\n              \n\n              {/* <button onClick={hübele(key[0])} >\n                <p className=\"container-selection-text title\">{`${key[0]}`}</p>\n                  <CircleIcon />\n              </button>\n               \n            </div>\n\n            <div className=\"container-selection_2\">\n              <button onClick={hübele(key[1])}>\n              <p className=\"container-selection-text title\">{`${key[1]}`}</p>\n                <CircleIcon />\n              </button>\n               \n            </div>\n\n            <div className=\"container-selection_3\">\n              <button onClick={hübele(key[2])}>\n              <p className=\"container-selection-text title\">{`${key[2]}`}</p>\n                <CircleIcon />\n              </button> */}\n              \n            </div>\n                \n        </div>\n        \n    </div> \n    </>\n  );\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}